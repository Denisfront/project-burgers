"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var acco = document.getElementsByClassName('accordeon__item');
var content = document.getElementsByClassName('accordeon-content');

var _loop = function _loop(index) {
  var element = acco[index];
  element.addEventListener('click', function (e) {
    e.preventDefault();

    for (var i = 0; i < acco.length; i++) {
      if (i !== index) {
        acco[i].classList.remove('accordeon-content--color--positoin--overflow');
      }
    }

    if (element.classList.contains('accordeon-content--color--positoin--overflow')) {
      element.classList.remove('accordeon-content--color--positoin--overflow');
    } else {
      element.classList.add('accordeon-content--color--positoin--overflow');
    }
  });
};

for (var index = 0; index < acco.length; index++) {
  _loop(index);
}

; // Доступ к инпуту с номером телефона

var form__inputjs = document.querySelector('.form__inputjs');
form__inputjs.addEventListener('keydown', function (e) {
  var isDigit = false;
  var isDash = false;
  var isControl = false;

  if (event.key >= 0 || event.ket <= 9) {
    isDigit = true;
  }

  if (event.key == '-') {
    isDash = true;
  }

  if (event.key == 'ArrowLeft' || event.key == 'ArrowRight' || event.key == 'ArrowUp' || event.key == 'ArrowDown' || event.key == 'Backspace' || event.key == 'Tab') {
    isControl = true;
  }

  if (!isDigit && !isDash && !isControl) {
    e.preventDefault();
  } // console.log(event);

});
var Myform = document.querySelector('.form'); // Доступ к тегу форм

var form = new FormData();
var btnform = document.querySelector('#btn-form'); // Доступ к кнопке

var overlayform = document.querySelector('.overlay-form');
var overlaycontent = document.querySelector('.overlay-form__conent');
var overlayformclouse = document.querySelector('.overlay-form__clouse');
btnform.addEventListener('click', function (e) {
  // Запрещаем перезагрузку сраницы при нажатии на кнопку
  e.preventDefault();

  if (validateForm(Myform)) {
    var processReqChange = function processReqChange() {
      if (xhr.readyState === 4) {
        if (xhr.status === 200) {
          var message = JSON.parse(xhr.response);
          console.log(message);
        } else {// ошибка
        }
      }
    };

    var data = {
      name: Myform.elements.name.value,
      phone: Myform.elements.phone.value,
      street: Myform.elements.street.value,
      comment: 'commetn',
      house: Myform.elements.house.value,
      apartament: Myform.elements.apartament.value,
      floor: Myform.elements.floor.value,
      to: 'kaktus.Zzzz@mail.ru'
    };

    for (var key in data) {
      form.append(key, data[key]);
    }

    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = processReqChange;
    xhr.open('POST', "https://webdev-api.loftschool.com/sendmail");
    xhr.send(form);
    xhr.addEventListener('load', function () {
      overlayform.style.display = 'flex';

      if (xhr.status === 200) {
        overlaycontent.innerText = 'Сообщение отправильно';
      } else {
        overlaycontent.innerText = 'Отправить письмо не удалось, повторите запрос позже';
      }

      overlayformclouse.addEventListener('click', function (e) {
        e.preventDefault();
        overlayform.style.display = 'none';
        body.classList.remove('body_closed');
        Myform.reset();
      });
      body.classList.add('body_closed');
      overlayform.addEventListener('click', function (e) {
        if (e.target === overlayform) {
          overlayform.style.display = 'none';
          body.classList.remove('body_closed');
          Myform.reset();
        }
      });
    });
  }
});

function validateForm(form) {
  var valid = true;

  if (!validateField(form.elements.name)) {
    valid = false;
  }

  if (!validateField(form.elements.phone)) {
    valid = false;
  }

  if (!validateField(form.elements.street)) {
    valid = false;
  }

  if (!validateField(form.elements.house)) {
    valid = false;
  }

  if (!validateField(form.elements.apartament)) {
    valid = false;
  }

  if (!validateField(form.elements.floor)) {
    valid = false;
  }

  return valid;
}

function validateField(field) {
  field.nextElementSibling.textContent = field.validationMessage;
  return field.checkValidity();
}

$(function () {
  //2. Получить элемент, к которому необходимо добавить маску
  $("#phone").mask("8(999) 999-9999"); // Маска для input с номером телефона
});
;
/*
jQuery Masked Input Plugin
Copyright (c) 2007 - 2015 Josh Bush (digitalbush.com)
Licensed under the MIT license (http://digitalbush.com/projects/masked-input-plugin/#license)
Version: 1.4.1
*/

!function (a) {
  "function" == typeof define && define.amd ? define(["jquery"], a) : a("object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) ? require("jquery") : jQuery);
}(function (a) {
  var b,
      c = navigator.userAgent,
      d = /iphone/i.test(c),
      e = /chrome/i.test(c),
      f = /android/i.test(c);
  a.mask = {
    definitions: {
      9: "[0-9]",
      a: "[A-Za-z]",
      "*": "[A-Za-z0-9]"
    },
    autoclear: !0,
    dataName: "rawMaskFn",
    placeholder: "_"
  }, a.fn.extend({
    caret: function caret(a, b) {
      var c;
      if (0 !== this.length && !this.is(":hidden")) return "number" == typeof a ? (b = "number" == typeof b ? b : a, this.each(function () {
        this.setSelectionRange ? this.setSelectionRange(a, b) : this.createTextRange && (c = this.createTextRange(), c.collapse(!0), c.moveEnd("character", b), c.moveStart("character", a), c.select());
      })) : (this[0].setSelectionRange ? (a = this[0].selectionStart, b = this[0].selectionEnd) : document.selection && document.selection.createRange && (c = document.selection.createRange(), a = 0 - c.duplicate().moveStart("character", -1e5), b = a + c.text.length), {
        begin: a,
        end: b
      });
    },
    unmask: function unmask() {
      return this.trigger("unmask");
    },
    mask: function mask(c, g) {
      var h, i, j, k, l, m, n, o;

      if (!c && this.length > 0) {
        h = a(this[0]);
        var p = h.data(a.mask.dataName);
        return p ? p() : void 0;
      }

      return g = a.extend({
        autoclear: a.mask.autoclear,
        placeholder: a.mask.placeholder,
        completed: null
      }, g), i = a.mask.definitions, j = [], k = n = c.length, l = null, a.each(c.split(""), function (a, b) {
        "?" == b ? (n--, k = a) : i[b] ? (j.push(new RegExp(i[b])), null === l && (l = j.length - 1), k > a && (m = j.length - 1)) : j.push(null);
      }), this.trigger("unmask").each(function () {
        function h() {
          if (g.completed) {
            for (var a = l; m >= a; a++) {
              if (j[a] && C[a] === p(a)) return;
            }

            g.completed.call(B);
          }
        }

        function p(a) {
          return g.placeholder.charAt(a < g.placeholder.length ? a : 0);
        }

        function q(a) {
          for (; ++a < n && !j[a];) {
            ;
          }

          return a;
        }

        function r(a) {
          for (; --a >= 0 && !j[a];) {
            ;
          }

          return a;
        }

        function s(a, b) {
          var c, d;

          if (!(0 > a)) {
            for (c = a, d = q(b); n > c; c++) {
              if (j[c]) {
                if (!(n > d && j[c].test(C[d]))) break;
                C[c] = C[d], C[d] = p(d), d = q(d);
              }
            }

            z(), B.caret(Math.max(l, a));
          }
        }

        function t(a) {
          var b, c, d, e;

          for (b = a, c = p(a); n > b; b++) {
            if (j[b]) {
              if (d = q(b), e = C[b], C[b] = c, !(n > d && j[d].test(e))) break;
              c = e;
            }
          }
        }

        function u() {
          var a = B.val(),
              b = B.caret();

          if (o && o.length && o.length > a.length) {
            for (A(!0); b.begin > 0 && !j[b.begin - 1];) {
              b.begin--;
            }

            if (0 === b.begin) for (; b.begin < l && !j[b.begin];) {
              b.begin++;
            }
            B.caret(b.begin, b.begin);
          } else {
            for (A(!0); b.begin < n && !j[b.begin];) {
              b.begin++;
            }

            B.caret(b.begin, b.begin);
          }

          h();
        }

        function v() {
          A(), B.val() != E && B.change();
        }

        function w(a) {
          if (!B.prop("readonly")) {
            var b,
                c,
                e,
                f = a.which || a.keyCode;
            o = B.val(), 8 === f || 46 === f || d && 127 === f ? (b = B.caret(), c = b.begin, e = b.end, e - c === 0 && (c = 46 !== f ? r(c) : e = q(c - 1), e = 46 === f ? q(e) : e), y(c, e), s(c, e - 1), a.preventDefault()) : 13 === f ? v.call(this, a) : 27 === f && (B.val(E), B.caret(0, A()), a.preventDefault());
          }
        }

        function x(b) {
          if (!B.prop("readonly")) {
            var c,
                d,
                e,
                g = b.which || b.keyCode,
                i = B.caret();

            if (!(b.ctrlKey || b.altKey || b.metaKey || 32 > g) && g && 13 !== g) {
              if (i.end - i.begin !== 0 && (y(i.begin, i.end), s(i.begin, i.end - 1)), c = q(i.begin - 1), n > c && (d = String.fromCharCode(g), j[c].test(d))) {
                if (t(c), C[c] = d, z(), e = q(c), f) {
                  var k = function k() {
                    a.proxy(a.fn.caret, B, e)();
                  };

                  setTimeout(k, 0);
                } else B.caret(e);

                i.begin <= m && h();
              }

              b.preventDefault();
            }
          }
        }

        function y(a, b) {
          var c;

          for (c = a; b > c && n > c; c++) {
            j[c] && (C[c] = p(c));
          }
        }

        function z() {
          B.val(C.join(""));
        }

        function A(a) {
          var b,
              c,
              d,
              e = B.val(),
              f = -1;

          for (b = 0, d = 0; n > b; b++) {
            if (j[b]) {
              for (C[b] = p(b); d++ < e.length;) {
                if (c = e.charAt(d - 1), j[b].test(c)) {
                  C[b] = c, f = b;
                  break;
                }
              }

              if (d > e.length) {
                y(b + 1, n);
                break;
              }
            } else C[b] === e.charAt(d) && d++, k > b && (f = b);
          }

          return a ? z() : k > f + 1 ? g.autoclear || C.join("") === D ? (B.val() && B.val(""), y(0, n)) : z() : (z(), B.val(B.val().substring(0, f + 1))), k ? b : l;
        }

        var B = a(this),
            C = a.map(c.split(""), function (a, b) {
          return "?" != a ? i[a] ? p(b) : a : void 0;
        }),
            D = C.join(""),
            E = B.val();
        B.data(a.mask.dataName, function () {
          return a.map(C, function (a, b) {
            return j[b] && a != p(b) ? a : null;
          }).join("");
        }), B.one("unmask", function () {
          B.off(".mask").removeData(a.mask.dataName);
        }).on("focus.mask", function () {
          if (!B.prop("readonly")) {
            clearTimeout(b);
            var a;
            E = B.val(), a = A(), b = setTimeout(function () {
              B.get(0) === document.activeElement && (z(), a == c.replace("?", "").length ? B.caret(0, a) : B.caret(a));
            }, 10);
          }
        }).on("blur.mask", v).on("keydown.mask", w).on("keypress.mask", x).on("input.mask paste.mask", function () {
          B.prop("readonly") || setTimeout(function () {
            var a = A(!0);
            B.caret(a), h();
          }, 0);
        }), e && f && B.off("input.mask").on("input.mask", u), A();
      });
    }
  });
});
;
var item = document.getElementsByClassName('accordeon-menu__item');

var _loop2 = function _loop2(_index) {
  var element = item[_index];
  element.addEventListener('click', function (e) {
    e.preventDefault();

    for (var i = 0; i < item.length; i++) {
      if (i !== _index) {
        item[i].classList.remove('accordeon-menu__content--active--color');
      }
    }

    if (element.classList.contains('accordeon-menu__content--active--color')) {
      element.classList.remove('accordeon-menu__content--active--color');
    } else {
      element.classList.add('accordeon-menu__content--active--color');
    }
  });
};

for (var _index = 0; _index < item.length; _index++) {
  _loop2(_index);
}

;
var hamburger = document.querySelector('#hamburger');
var arrowscroww = document.querySelector('#arrowscroll');
var computed = getComputedStyle(navtablets);
var computedscroll = getComputedStyle(arrowscroll);
var body = document.querySelector('body');
hamburger.addEventListener('click', function (e) {
  e.preventDefault(); // console.log(computed.display);

  var displaynone = computed.display;
  var arrowscrollblock = computedscroll.display;

  if (displaynone == 'none') {
    navtablets.style.display = 'flex';
    body.classList.add('body_closed');
  } else {
    navtablets.style.display = 'none';
    body.classList.remove('body_closed');
  }

  if (arrowscrollblock == 'block') {
    arrowscroll.style.display = 'none';
  } else {
    arrowscroll.style.display = 'block';
  }
});
;
var sections = $('.section');
var display = $('.maincontent');
var inScroll = false;
var md = new MobileDetect(window.navigator.userAgent);
var isMobile = md.mobile();

var performTransition = function performTransition(sectionEq) {
  if (inScroll) return;
  inScroll = true;
  var transitionIsOver = 1000;
  var mouseInertionIsOver = 300;
  var position = sectionEq * -100;
  if (isNaN(position)) console.error('передли неверное значение в performTransition');
  sections.eq(sectionEq).addClass('active').siblings().removeClass('active');
  display.css({
    transform: "translateY(".concat(position, "%)")
  });
  setTimeout(function () {
    inScroll = false;
    $('.column__item').eq(sectionEq).addClass('column__dot--active').siblings().removeClass('column__dot--active');
  }, transitionIsOver + mouseInertionIsOver);

  if (sectionEq > 0) {
    $('.header').css({
      display: 'none'
    });
  } else {
    $('.header').css({
      display: 'block'
    });
  }
};

var scrollToSection = function scrollToSection(direction) {
  var activeSection = sections.filter('.active');
  var nextSection = activeSection.next();
  var prevSection = activeSection.prev();

  if (direction === 'next' && nextSection.length) {
    performTransition(nextSection.index());
  }

  if (direction === 'prev' && prevSection.length) {
    performTransition(prevSection.index());
  }
};

$(window).on('wheel', function (e) {
  var deltaY = e.originalEvent.deltaY;

  if (deltaY > 0) {
    scrollToSection('next');
  }

  if (deltaY < 0) {
    scrollToSection('prev');
  }
});
$(window).on('keydown', function (e) {
  var tagName = e.target.tagName.toLowerCase();
  var usersTypingInInpust = tagName === 'input' || tagName === 'textarea';
  if (usersTypingInInpust) return;

  switch (e.keyCode) {
    case 38:
      scrollToSection('prev');
      break;

    case 40:
      scrollToSection('next');
      break;
  }
});
$('[data-scroll-to]').on('click', function (e) {
  e.preventDefault();
  var $this = $(e.currentTarget);
  var target = $this.attr('data-scroll-to');
  performTransition(target);
});

if (isMobile) {
  $("body").swipe({
    swipe: function swipe(event, direction, distance, duration, fingerCount, fingerData) {
      var scrollDirection = direction === 'up' ? 'next' : 'prev';
      scrollToSection(scrollDirection);
    }
  });
}

;
$(window).on('load', function () {
  var $preloader = $('#p_prldr'),
      $svg_anm = $preloader.find('.svg_anm');
  $svg_anm.fadeOut();
  $preloader.delay(1000).fadeOut('slow');
});
;
var buttonOpen = document.querySelector('#buttonOpen');
var body1 = document.querySelector('body');
var reviews = document.querySelector('#reviewsjs');
var openOverlay = reviewOverlay('Константин Спилберг', 'Мысли все о них и о них, о них и о них. Нельзя устоять, невозможно забыть... Никогда не думал, что булочки могут быть такими мягкими, котлетка такой сочной, а сыр таким расплавленным. Мысли все о них и о них, о них и о них. Нельзя устоять, невозможно забыть... Никогда не думал, что булочки могут быть такими мягкими, котлетка такой сочной, а сыр таким расплавленным.');
$('.buttonOpen').on('click', function () {
  reviews.appendChild(openOverlay);
  body1.classList.add('body_closed');
});

function reviewOverlay(username, content) {
  var overlayElement = document.createElement('div');
  overlayElement.classList.add('overlay');
  overlayElement.addEventListener('click', function (e) {
    if (e.target === overlayElement) {
      closeElement.click();
    }
  });
  var conainerElement = document.createElement('div');
  conainerElement.classList.add('overlay__container');
  var usermaeElement = document.createElement('div');
  usermaeElement.classList.add('overlay__username');
  usermaeElement.innerHTML = username;
  var contentElement = document.createElement('div');
  contentElement.classList.add('overlay-content');
  contentElement.innerHTML = content;
  var closeElement = document.createElement('a');
  closeElement.classList.add('close');
  closeElement.href = "#";
  closeElement.addEventListener('click', function (e) {
    e.preventDefault();
    reviews.removeChild(openOverlay);
    body1.classList.remove('body_closed');
  });
  overlayElement.appendChild(conainerElement);
  conainerElement.appendChild(usermaeElement);
  conainerElement.appendChild(contentElement);
  conainerElement.appendChild(closeElement);
  return overlayElement;
}

; // const leftbutton = document.querySelector('.button-prev');
// const rightbutton = document.querySelector('.button-next');
// const itemlist = document.querySelector('.menu-slider__list');
// rightbutton.addEventListener('click', function (e) {
//     loop('rightbutton', e);
// });
// leftbutton.addEventListener('click', function (e) {
//     loop('leftbutton', e);
// });
// function loop(direction, e) {
//     e.preventDefault();
//     if (direction == rightbutton) {
//         itemlist.appendChild(itemlist.firstElementChild);
//     } else {
//         itemlist.insertBefore(itemlist.lastElementChild, itemlist.firstElementChild);
//     }
// }

$(function () {
  var moveSlide = function moveSlide(item, slideNum) {
    var activeSlide = item.filter('.active'),
        reqItem = item.eq(slideNum),
        reqIndex = reqItem.index(),
        duration = 500;

    if (reqItem.length) {
      item.animate({
        'left': -reqIndex * 100 + '%'
      }, duration, function () {
        activeSlide.removeClass('active');
        reqItem.addClass('active');
      });
    }
  };

  $('.button-slider').on('click', function (e) {
    e.preventDefault();
    var item = $('.menu-slider__content'),
        activeItem = item.filter('.active'),
        existedItem,
        edgeItem,
        reqItem;

    if ($(this).hasClass('button-next')) {
      // вперёд
      existedItem = activeItem.next();
      edgeItem = item.first();
    }

    if ($(this).hasClass('button-prev')) {
      // назад
      existedItem = activeItem.prev();
      edgeItem = item.last();
    }

    reqItem = existedItem.length ? existedItem.index() : edgeItem.index();
    moveSlide(item, reqItem);

    if (existedItem.length) {
      moveSlide(item, existedItem);
    } else {
      moveSlide(item, edgeItem);
    }
  });
});
;
var vid = document.getElementsByTagName('video')[0];
var playBtn = document.getElementById('player__start');
var playBtnStart = document.getElementById('player__button-start');
var svgIcon = $('.icon-play');
var btnPaused = $('.player__start');
var volumeControl = $('.player__playsound');
var playTime = $('.player__duratipn-completed');
playBtn.addEventListener('click', function () {
  if (vid.paused) {
    btnPaused.addClass('paused');
    playBtnStart.classList.add('play__button-none');
    svgIcon.css({
      display: 'none'
    });
    vid.play();
  } else {
    vid.pause();
    btnPaused.removeClass('paused');
    svgIcon.css({
      display: 'block'
    });
  }
}, false);
playBtnStart.addEventListener('click', function () {
  if (vid.paused) {
    playBtnStart.classList.add('paused');
    vid.play();
  } else {
    vid.pause();
  }
}, false);
;
ymaps.ready(init);
var placemarks = [{
  latitude: 59.97,
  longitude: 30.31,
  hintContent: '<div class="map__hint">ул. Литераторов, д.19</div>',
  balloonContent: ['<div class="map__baloon">', 'Cамые вкусные бургеры у нас! Заходите с 10:00 до 21:00 по адресу: ул. Литераторов, д.19', '</div>']
}, {
  latitude: 59.88,
  longitude: 30.31,
  hintContent: '<div class="map__hint">ул. Литераторов, д.19</div>',
  balloonContent: ['<div class="map__baloon">', 'Cамые вкусные бургеры у нас! Заходите с 10:00 до 21:00 по адресу: ул. Литераторов, д.19', '</div>']
}, {
  latitude: 59.94,
  longitude: 30.38,
  hintContent: '<div class="map__hint">ул. Литераторов, д.19</div>',
  balloonContent: ['<div class="map__baloon">', 'Cамые вкусные бургеры у нас! Заходите с 10:00 до 21:00 по адресу: ул. Литераторов, д.19', '</div>']
}, {
  latitude: 59.91,
  longitude: 30.49,
  hintContent: '<div class="map__hint">ул. Литераторов, д.19</div>',
  balloonContent: ['<div class="map__baloon">', 'Cамые вкусные бургеры у нас! Заходите с 10:00 до 21:00 по адресу: ул. Литераторов, д.19', '</div>']
}];

function init() {
  var myMap = new ymaps.Map("map", {
    center: [59.92, 30.32],
    zoom: 11,
    controls: ['zoomControl'],
    behaviors: ['drag']
  });
  placemarks.forEach(function (obj) {
    var Myplacemark = new ymaps.Placemark([obj.latitude, obj.longitude], {
      hintContent: obj.hintContent,
      balloonContent: obj.balloonContent.join('')
    }, {
      iconLayout: 'default#image',
      iconImageHref: 'img/icons/map-marker.svg',
      iconImageSize: [46, 57],
      iconImageOffset: [-23, -57]
    });
    myMap.geoObjects.add(Myplacemark);
  });
}

;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
